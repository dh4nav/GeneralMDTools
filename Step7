#!/usr/bin/env python

import sys
sys.path.extend(["/home/hpc/bca1/bca109/bin/GeneralMDTools", "/home/t/Source/GeneralMDTools"])

#import AtomEnsemble as ae
import os
os.chdir(os.environ['PBS_O_WORKDIR'])
#import sys
#import fieldtools as ft
import iotools as iot
import random
#import numpy as np

run_length = 2000000 # number of simulation frames to run before we quit

def frand(minval=0.0, maxval=1.0):
    return random.uniform(minval, maxval)

#seed random
random.seed()

#Get index
#index = int(sys.argv[1])

#Load last frame
last_frame_reader = iot.DLP2HReader(fileobj="HISTORY")
last_frame = last_frame_reader[-1]

timecounter = len(last_frame_reader)
if os.path.isfile("timecounter"):
    with open("timecounter") as f:
        timecounter += str(f.readline().strip())

if timecounter > run_length:
    pass # rinse and repeat with step 1
else:
    for f in last_frame_reader:
        if len(f.get_approaches("OH", "HH", 1.5, 2.0)) != 0:
            # H Bridge

            with open("timecounter", "w") as f:
                f.write("0") #reset time
            os.system('qsub -l nodes=2:ppn=40,walltime=4:00:00 -q work -N step6 -W depend=afterany:'+ os.environ['PBS_JOBID'] + ' /home/hpc/bca1/bca109/bin/GeneralMDTools/Step8')
            exit()

    with open("timecounter", "w") as f:
        f.write(str(timecounter))

    os.system("mv REVCON CONFIG; mv REVIVE REVOLD; mv CONTROL5R CONTROL; cat HISTORYX HISTORY > HISTORYX; rm HISTORY")
    os.system('qsub -l nodes=5:ppn=40,walltime=4:00:00 -q work -N step6 -W depend=afterany:'+ os.environ['PBS_JOBID'] + ' /home/hpc/bca1/bca109/bin/GeneralMDTools/Step6')
    #step6
